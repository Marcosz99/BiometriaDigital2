/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package apresentacao.paciente;

import DAL.MedicoDAO;
import DAL.PacienteDAO;
import DAL.RegistroDAO;
import apresentacao.medico.TelaVisualizarDadosMedico;
import apresentacao.paciente.TelaVisualizarDadosPaciente;
import java.util.List;
import javax.swing.table.DefaultTableModel;
import modelo.Medico;
import modelo.Paciente;
import modelo.Registro;
import servico.ServicoUsuarioLogado;

/**
 *
 * @author Admin
 */
public class TelaPaciente extends javax.swing.JFrame {

    private DefaultTableModel tableModel;
    private int paginaAtual = 1;
    private static final int ITENS_POR_PAGINA = 20;

    public TelaPaciente() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        frmRegistros = new javax.swing.JFrame();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblDados = new javax.swing.JTable();
        txfNomePesquisado = new javax.swing.JTextField();
        btnPesquisarPorNome = new javax.swing.JButton();
        btnVoltar = new javax.swing.JButton();
        btnAvancar = new javax.swing.JButton();
        jMenu = new javax.swing.JMenuBar();
        jMenuSobreMim = new javax.swing.JMenu();
        jMenuMeusDados = new javax.swing.JMenuItem();
        jMenuRegistrosMeusPacientes = new javax.swing.JMenuItem();

        tblDados.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Descrição", "Medico", "Paciente"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblDados);

        btnPesquisarPorNome.setText("Pesquisar por Nome");
        btnPesquisarPorNome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPesquisarPorNomeActionPerformed(evt);
            }
        });

        btnVoltar.setText("Voltar");
        btnVoltar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVoltarActionPerformed(evt);
            }
        });

        btnAvancar.setText("Avançar");
        btnAvancar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAvancarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout frmRegistrosLayout = new javax.swing.GroupLayout(frmRegistros.getContentPane());
        frmRegistros.getContentPane().setLayout(frmRegistrosLayout);
        frmRegistrosLayout.setHorizontalGroup(
            frmRegistrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(frmRegistrosLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(frmRegistrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 737, Short.MAX_VALUE)
                    .addGroup(frmRegistrosLayout.createSequentialGroup()
                        .addComponent(btnVoltar, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnAvancar, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
            .addGroup(frmRegistrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(frmRegistrosLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(txfNomePesquisado)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                    .addComponent(btnPesquisarPorNome)
                    .addContainerGap()))
        );
        frmRegistrosLayout.setVerticalGroup(
            frmRegistrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, frmRegistrosLayout.createSequentialGroup()
                .addGap(61, 61, 61)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 427, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(frmRegistrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnVoltar, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAvancar, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(18, Short.MAX_VALUE))
            .addGroup(frmRegistrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(frmRegistrosLayout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(frmRegistrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(btnPesquisarPorNome, javax.swing.GroupLayout.DEFAULT_SIZE, 46, Short.MAX_VALUE)
                        .addComponent(txfNomePesquisado))
                    .addContainerGap(507, Short.MAX_VALUE)))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);

        jMenuSobreMim.setText("Sobre Mim");
        jMenuSobreMim.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuSobreMimActionPerformed(evt);
            }
        });

        jMenuMeusDados.setText("Meus Dados");
        jMenuMeusDados.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuMeusDadosActionPerformed(evt);
            }
        });
        jMenuSobreMim.add(jMenuMeusDados);

        jMenuRegistrosMeusPacientes.setText("Registros");
        jMenuRegistrosMeusPacientes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuRegistrosMeusPacientesActionPerformed(evt);
            }
        });
        jMenuSobreMim.add(jMenuRegistrosMeusPacientes);

        jMenu.add(jMenuSobreMim);

        setJMenuBar(jMenu);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 277, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuSobreMimActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuSobreMimActionPerformed

    }//GEN-LAST:event_jMenuSobreMimActionPerformed

    private void jMenuMeusDadosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuMeusDadosActionPerformed
        TelaVisualizarDadosPaciente telaVisualizarDadosPaciente = new TelaVisualizarDadosPaciente();
        telaVisualizarDadosPaciente.setVisible(true);
        telaVisualizarDadosPaciente.setLocationRelativeTo(null);

        ServicoUsuarioLogado usuarioLogado = ServicoUsuarioLogado.getInstance();

        if ("Paciente".equals(usuarioLogado.getTipo())) {
            // Realiza uma busca no banco de dados para obter os detalhes completos do médico logado
            PacienteDAO pacienteDAO = new PacienteDAO();
            Paciente paciente = pacienteDAO.buscarPorId(usuarioLogado.getId());

            // Preenche os campos da tela com os dados do médico logado
            if (paciente != null) {
                telaVisualizarDadosPaciente.getTxfNome().setText(paciente.getNomeCompleto());
                telaVisualizarDadosPaciente.getTxfUsuario().setText(paciente.getNomeUsuario());
                telaVisualizarDadosPaciente.getTxfCpf().setText(paciente.getCpf());
                telaVisualizarDadosPaciente.getTxfNascimento().setText(paciente.getDataNascimento());
                // Outros campos que você quiser preencher
            }
        }
    }//GEN-LAST:event_jMenuMeusDadosActionPerformed

    private void jMenuRegistrosMeusPacientesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuRegistrosMeusPacientesActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jMenuRegistrosMeusPacientesActionPerformed

    private void btnPesquisarPorNomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPesquisarPorNomeActionPerformed
        RegistroDAO registroDAO = new RegistroDAO();
        String nomePesquisado = txfNomePesquisado.getText(); // Obtém o texto do campo de pesquisa

        if (!nomePesquisado.trim().isEmpty()) {
            List<Registro> registrosFiltrados = registroDAO.buscarPorNomePaciente(nomePesquisado);
            atualizarTabela(registrosFiltrados); // Atualiza a tabela com os registros filtrados
        } else {
            // Se o campo estiver vazio, carrega a tabela normalmente
            carregarPagina(paginaAtual, ITENS_POR_PAGINA);
        }
    }//GEN-LAST:event_btnPesquisarPorNomeActionPerformed

    private void btnVoltarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVoltarActionPerformed
        if (paginaAtual > 1) {
            paginaAtual--;
            carregarPagina(paginaAtual, ITENS_POR_PAGINA); // Carrega a página anterior
        }
    }//GEN-LAST:event_btnVoltarActionPerformed

    private void btnAvancarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAvancarActionPerformed
        RegistroDAO registroDAO = new RegistroDAO();
        long totalRegistros = registroDAO.contarTotalRegistros(); // Conta o total de registros
        int totalPaginas = (int) Math.ceil((double) totalRegistros / ITENS_POR_PAGINA); // Calcula o número total de páginas

        if (paginaAtual < totalPaginas) { // Só avança se ainda houver páginas
            paginaAtual++;
            carregarPagina(paginaAtual, ITENS_POR_PAGINA); // Carrega a próxima página
        }
    }//GEN-LAST:event_btnAvancarActionPerformed

    public void atualizarTabela(List<Registro> registros) {
        DefaultTableModel modelo = (DefaultTableModel) tblDados.getModel();
        modelo.setRowCount(0); // Limpa a tabela

        for (Registro registro : registros) {
            modelo.addRow(new Object[]{
                registro.getPaciente().getNomeCompleto(), // Nome do paciente
                registro.getMedico().getNomeCompleto(), // Nome do médico responsável
                registro.getDescricao() // Descrição do registro
            });

        }
    }

    private void carregarPagina(int paginaAtual, int linhasPorPagina) {
        DefaultTableModel modelo = (DefaultTableModel) tblDados.getModel();
        modelo.setRowCount(0); // Limpa a tabela antes de carregar novos dados

        RegistroDAO registroDAO = new RegistroDAO();
        List<Registro> registros = registroDAO.carregarPagina(paginaAtual, linhasPorPagina);

        // Verifica se a lista de registros não está vazia antes de iterar
        if (registros != null && !registros.isEmpty()) {
            for (Registro registro : registros) {
                String nomePaciente = (registro.getPaciente() != null) ? registro.getPaciente().getNomeCompleto() : "Desconhecido";
                String nomeMedico = (registro.getMedico() != null) ? registro.getMedico().getNomeCompleto() : "Desconhecido";
                String descricao = (registro.getDescricao() != null) ? registro.getDescricao() : "Sem descrição";

                Object[] dados = {
                    nomePaciente, // Nome do paciente
                    nomeMedico, // Nome do médico
                    descricao // Descrição do registro
                };
                modelo.addRow(dados);
            }
        }
    }
    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaPaciente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaPaciente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaPaciente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaPaciente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TelaPaciente().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAvancar;
    private javax.swing.JButton btnPesquisarPorNome;
    private javax.swing.JButton btnVoltar;
    private javax.swing.JFrame frmRegistros;
    private javax.swing.JMenuBar jMenu;
    private javax.swing.JMenuItem jMenuMeusDados;
    private javax.swing.JMenuItem jMenuRegistrosMeusPacientes;
    private javax.swing.JMenu jMenuSobreMim;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblDados;
    private javax.swing.JTextField txfNomePesquisado;
    // End of variables declaration//GEN-END:variables
}
